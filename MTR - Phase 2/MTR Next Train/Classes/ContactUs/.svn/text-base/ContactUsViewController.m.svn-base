//
//  ContactUsViewController.m
//  MTR
//
//  Created by Jeff Cheung on 11年10月27日.
//  Copyright (c) 2011年 __MyCompanyName__. All rights reserved.
//

#import "ContactUsViewController.h"
#import "NextTrainAppDelegate.h"
@implementation ContactUsViewController

#define TAG_TELEPHONE 1001

@synthesize station_contact_picker_bg_view = _station_contact_picker_bg_view;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        if([[CoreData sharedCoreData].lang isEqualToString:@"en"]){
            _lang = [@"eng" retain];
        }
        else{
            _lang = [@"chi" retain];
        }
    }
    return self;
}

-(void)dealloc{
    
    _station_contact_line_picker_view.dataSource = nil;
    _station_contact_station_picker_view.delegate = nil;
    
    for(int x = [[_general_scroll_view subviews] count] - 1; x >= 0; x--){
		NSObject *t = [[_general_scroll_view subviews] objectAtIndex:x];
		if([t isKindOfClass:[UITextView class]]){
			[(UITextView*)t removeFromSuperview];
		}
        if([t isKindOfClass:[UIButton class]]){
			[(UIButton*)t removeFromSuperview];
		}
        if([t isKindOfClass:[UIImageView class]]){
			[(UIImageView*)t removeFromSuperview];
		}
	}
    if(_lang != nil){
        [_lang release];
        _lang = nil;
    }
    if(_general_contact_array != nil){
        [_general_contact_array release];
        _general_contact_array = nil;
    }
    if(_line_contact_array != nil){
        [_line_contact_array release];
        _line_contact_array = nil;
    }
    if(_station_contact_array != nil){
        [_station_contact_array release];
        _station_contact_array = nil;
    }
    if(_station_contact_record != nil){
        [_station_contact_record removeAllObjects];
        [_station_contact_record release];
        _station_contact_record = nil;
    }
    
    ReleaseObj(_general_button)
    ReleaseObj(_station_contact_button)
    ReleaseObj(_general_scroll_view)
    ReleaseObj(_station_contact_bg_view)
    ReleaseObj(_station_contact_line_value_label)
    ReleaseObj(_station_contact_station_value_label)
    ReleaseObj(_station_contact_tel_button)
    ReleaseObj(_station_contact_line_button)
    ReleaseObj(_station_contact_station_button)
    ReleaseObj(_station_contact_picker_bg_view)
    ReleaseObj(_station_contact_line_picker_view)
    ReleaseObj(_station_contact_station_picker_view)
    ReleaseObj(_select_button)
    ReleaseObj(_aiv)
    ReleaseObj(_title_label)
    ReleaseObj(_tel_label)
    ReleaseObj(_line_label)
    ReleaseObj(_station_label)
    ReleaseObj(_btn_callbackMother)
    
    [_background release];
    [super dealloc];
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    _background.image = [UIImage imageNamed:[NSString stringWithFormat:@"background_%@.png",isFive?@"1136":@"960"]];
    _background.frame = CGRectMake(_background.frame.origin.x, _background.frame.origin.y, _background.frame.size.width, isFive?548:460);

    NextTrainAppDelegate *delegate = (NextTrainAppDelegate*)[UIApplication sharedApplication].delegate;
    if(isFive == NO){
        self.view.frame = CGRectMake(0, 0, 320, 460);
        [_general_scroll_view setFrame:CGRectMake(_general_scroll_view.frame.origin.x, _general_scroll_view.frame.origin.y,320 , 302)];
    } else{
        self.view.frame = CGRectMake(0, 0, 320, 548);
    }
    
    _title_label.text = NSLocalizedString(([NSString stringWithFormat:@"contact_us_%@", [CoreData sharedCoreData].lang]), nil);
    _tel_label.text = NSLocalizedString(([NSString stringWithFormat:@"contact_us_tel_%@", [CoreData sharedCoreData].lang]), nil);
    _station_label.text = NSLocalizedString(([NSString stringWithFormat:@"contact_us_station_%@", [CoreData sharedCoreData].lang]), nil);
    _line_label.text = NSLocalizedString(([NSString stringWithFormat:@"contact_us_line_%@", [CoreData sharedCoreData].lang]), nil);
    
    [_general_button setBackgroundImage:[UIImage imageNamed:[NSString stringWithFormat:@"contact_info_general_off_%@.png", [CoreData sharedCoreData].lang]] forState:UIControlStateNormal];
    
    [_general_button setBackgroundImage:[UIImage imageNamed:[NSString stringWithFormat:@"contact_info_general_on_%@.png", [CoreData sharedCoreData].lang]] forState:UIControlStateSelected];
    
    [_station_contact_button setBackgroundImage:[UIImage imageNamed:[NSString stringWithFormat:@"contact_info_station_contact_off_%@.png", [CoreData sharedCoreData].lang]] forState:UIControlStateNormal];
    
    [_station_contact_button setBackgroundImage:[UIImage imageNamed:[NSString stringWithFormat:@"contact_info_station_contact_on_%@.png", [CoreData sharedCoreData].lang]] forState:UIControlStateSelected];
    
    _station_contact_line_picker_selected_index = 0;
    _station_contact_station_picker_selected_index = 0;
    _station_contact_record = [NSMutableDictionary new];
    
    [_aiv startAnimating];
    _aiv.hidden = NO;
    
    dispatch_queue_t dbQueue = dispatch_queue_create("DB", NULL);
    dispatch_async(dbQueue, ^{
    
        [[ContactSQLOperator sharedOperator] openDatabase];
        _general_contact_array = [[[ContactSQLOperator sharedOperator] selectALLFromGeneralContact] retain];
        _line_contact_array = [[[ContactSQLOperator sharedOperator] selectALLFromLine] retain];
        _station_contact_array = [[[ContactSQLOperator sharedOperator] selectALLFromStationContact] retain];
        [[ContactSQLOperator sharedOperator] closeDatabase];
        
        NSLog(@"1: %@", _general_contact_array);
        NSLog(@"2: %@", _line_contact_array);
        NSLog(@"3: %@", _station_contact_array);
        
        dispatch_async(dispatch_get_main_queue(), ^{
            [self constructGeneralSection];
            [self constructStationContact];
            
            if(_station_contact_line_picker_view !=nil){
                [_station_contact_line_picker_view reloadAllComponents];
                [_station_contact_station_picker_view reloadAllComponents];
            }
            [_select_button setTitle:NSLocalizedString(([NSString stringWithFormat:@"select_%@", [CoreData sharedCoreData].lang]), nil) forState:UIControlStateNormal];
            
            [_aiv stopAnimating];
            _aiv.hidden = YES;
            [delegate.tab_bar_bg_view setUserInteractionEnabled:YES];
        });
    });
    
    // x-callback
    [self handleCallbackMotherButton];
}

-(void)viewWillAppear:(BOOL)animated{
    NextTrainAppDelegate *delegate = (NextTrainAppDelegate*)[UIApplication sharedApplication].delegate;

    [delegate.tab_bar_bg_view setUserInteractionEnabled:NO];

}

-(void)viewWillDisappear:(BOOL)animated{
}

- (void)viewDidUnload
{
    [_background release];
    _background = nil;
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
        
#pragma mark - Core

-(void)constructGeneralSection{
//    _general_scroll_view
    float y_offset = 8;
    int x = 0;
    for(x = 0; _general_contact_array != nil && x < [_general_contact_array count]; x++){
        //NSLog(@"_general_contact_array : \n%@", _general_contact_array);
        float height = 0;
        //datatype can be 0, 1, 2, 3
        //0 read only, 1 phone, 2 address, 3 link
        int data_type = -1;
        UIImageView *highlight_image_view = nil;
        if(x % 2 == 1){
            highlight_image_view = [[[UIImageView alloc] initWithFrame:CGRectMake(0, y_offset, 300, 300)] autorelease];
            highlight_image_view.backgroundColor = [UIColor clearColor];
            highlight_image_view.image = [UIImage imageNamed:@"bg_highlight.png"];
            [_general_scroll_view addSubview:highlight_image_view];
        }
        
        if([[_general_contact_array objectAtIndex:x] objectForKey:@"datatype"] != nil)
            data_type = [[[_general_contact_array objectAtIndex:x] objectForKey:@"datatype"] intValue];
        
        if(data_type != 2){
            UITextView *text_view = [[[UITextView alloc] initWithFrame:CGRectMake(22, y_offset, 120, 160)] autorelease];
            text_view.userInteractionEnabled = NO;
            text_view.backgroundColor = [UIColor clearColor];
            text_view.font = [UIFont systemFontOfSize:14];
            text_view.text = [[[_general_contact_array objectAtIndex:x] objectForKey:[NSString stringWithFormat:@"label_%@", _lang]] stringByAppendingString:@": "];
            [_general_scroll_view addSubview:text_view];
        
            if(data_type == 0){
                //UITextView *content_text_view = [[[UITextView alloc] initWithFrame:CGRectMake(158, y_offset, 120, 120)] autorelease];
                UITextView *content_text_view = [[[UITextView alloc] initWithFrame:CGRectMake(143, y_offset, 135, 120)] autorelease];
                content_text_view.userInteractionEnabled = NO;
                content_text_view.backgroundColor = [UIColor clearColor];
                content_text_view.font = [UIFont systemFontOfSize:14];
                content_text_view.textAlignment = UITextAlignmentRight;
                content_text_view.text = [[_general_contact_array objectAtIndex:x] objectForKey:[NSString stringWithFormat:@"content_%@", _lang]];
                [_general_scroll_view addSubview:content_text_view];
                text_view.contentSize.height > content_text_view.contentSize.height?(height = text_view.contentSize.height):(height = content_text_view.contentSize.height);
                text_view.frame = CGRectMake(22, y_offset, 120, height);
                //content_text_view.frame = CGRectMake(158, y_offset, 120, height);
                content_text_view.frame = CGRectMake(143, y_offset, 135, height);
            }
            else{
                text_view.contentSize.height > 22?(height = text_view.contentSize.height):(height = 22);
                text_view.frame = CGRectMake(22, y_offset, 120, height);
            }
            
            
            if(data_type == 1 || data_type == 3){
                UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
                button.backgroundColor = [UIColor clearColor];
                button.contentHorizontalAlignment = UIControlContentHorizontalAlignmentRight;
                button.titleLabel.font = [UIFont systemFontOfSize:14];
                [button setTitle:[[_general_contact_array objectAtIndex:x] objectForKey:[NSString stringWithFormat:@"content_%@", _lang]] forState:UIControlStateNormal];
                [button setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
                if(data_type == 1)
                    [button addTarget:self action:@selector(clickToCall:) forControlEvents:UIControlEventTouchUpInside];
                else if(data_type == 3)
                    [button addTarget:self action:@selector(clickToLink:) forControlEvents:UIControlEventTouchUpInside];
                [_general_scroll_view addSubview:button];
                button.frame = CGRectMake(150, y_offset/* + height/2 - 22/2*/ + 6, 120, 22);
            }
        }
        //datatype == 2
        else if(data_type == 2){
            UITextView *text_view = [[[UITextView alloc] initWithFrame:CGRectMake(22, y_offset, 276, 160)] autorelease];
            text_view.userInteractionEnabled = NO;
            text_view.backgroundColor = [UIColor clearColor];
            text_view.font = [UIFont systemFontOfSize:14];
            text_view.text = [[[_general_contact_array objectAtIndex:x] objectForKey:[NSString stringWithFormat:@"label_%@", _lang]] stringByAppendingString:@": "];
            [_general_scroll_view addSubview:text_view];
            height = text_view.contentSize.height;
            text_view.frame = CGRectMake(22, y_offset, 276, height);
        }
        if(x % 2 == 1 && highlight_image_view != nil){
            highlight_image_view.frame = CGRectMake(0, y_offset, 300, height);
        }
        
        y_offset += height;
    }
    
    
    UIImageView *highlight_image_view = nil;
    if(x % 2 == 1){
        highlight_image_view = [[[UIImageView alloc] initWithFrame:CGRectMake(0, y_offset, 300, 300)] autorelease];
        highlight_image_view.backgroundColor = [UIColor clearColor];
        highlight_image_view.image = [UIImage imageNamed:@"bg_highlight.png"];
        [_general_scroll_view addSubview:highlight_image_view];
    }
    
    UITextView *text_view = [[[UITextView alloc] initWithFrame:CGRectMake(22, y_offset, 256, 256)] autorelease];
    text_view.userInteractionEnabled = NO;
    text_view.backgroundColor = [UIColor clearColor];
    text_view.font = [UIFont systemFontOfSize:14];
    if([[CoreData sharedCoreData].lang isEqualToString:@"en"]){
        text_view.text = @"* To reach us on the telephone, you may call the MTR Hotline (852) 2881 8888 which is manned between 8:30 am and 6:00 pm on weekdays and between 8:30 am and 1:00 pm on Saturdays (Except public holidays). After office hours, customers can obtain general MTR service information via the Interactive Voice Recognition System.";
    }
    else{
        text_view.text = @"* 乘客可在辦公時間內致電 (852) 2881 8888 選擇與熱綫職員直接對話。辦公時間為星期一至五上午8時30分至下午6時、星期六上午8時30分至下午1時；星期日及公眾假期休息。乘客亦可在辦公時間以外透過互動辨聲系統得到一般港鐵的服務資訊。";
    }
    [_general_scroll_view addSubview:text_view];
    text_view.frame = CGRectMake(22, y_offset, 256, text_view.contentSize.height);
    if(highlight_image_view != nil){
        highlight_image_view.frame = CGRectMake(0, y_offset, 300, text_view.frame.size.height);
    }
    y_offset += text_view.frame.size.height;
    
    //_general_scroll_view.frame = CGRectMake(10, 106, 300, 299);
    _general_scroll_view.contentSize = CGSizeMake(300, y_offset + 16);
    
    _general_scroll_view.alpha = 0;
    [UIView animateWithDuration:0.3 animations:^{
        _general_scroll_view.alpha = 1;
    }];
}

-(void)constructStationContact{
    
    if([_line_contact_array count] > 0){
        _station_contact_line_value_label.text = [[_line_contact_array objectAtIndex:0] objectForKey:[NSString stringWithFormat:@"line_%@", _lang]];
        NSString *line_line = [[_line_contact_array objectAtIndex:0] objectForKey:@"line"];
        for(int y = 0; _station_contact_array != nil && y < [_station_contact_array count]; y++){
            NSString *station_line = [[_station_contact_array objectAtIndex:y] objectForKey:@"line"];
            if(line_line != nil && station_line != nil && [line_line isEqualToString:station_line]){
                _station_contact_station_value_label.text = [[_station_contact_array objectAtIndex:y] objectForKey:[NSString stringWithFormat:@"station_%@", _lang]];
                [_station_contact_tel_button setTitle:[[_station_contact_array objectAtIndex:y] objectForKey:@"tel"] forState:UIControlStateNormal];
                break;
            }
        }
    }
    
    for(int x = 0; _line_contact_array != nil && x < [_line_contact_array count]; x++){
        NSMutableArray *station_contact_list = [NSMutableArray new];
        NSString *line_line = [[_line_contact_array objectAtIndex:x] objectForKey:@"line"];
        for(int y = 0; _station_contact_array != nil && y < [_station_contact_array count]; y++){
            NSString *station_line = [[_station_contact_array objectAtIndex:y] objectForKey:@"line"];
            if(line_line != nil && station_line != nil && [line_line isEqualToString:station_line]){
                [station_contact_list addObject:[_station_contact_array objectAtIndex:y]];
            }
        }
        if([station_contact_list count] > 0 && line_line != nil){
            [_station_contact_record setObject:station_contact_list forKey:line_line];
        }
        [station_contact_list release];
    }
}


#pragma mark - Handle Click Button Events

-(IBAction)clickGeneralButton:(UIButton*)button{
    _general_button.selected = YES;
    _station_contact_button.selected = NO;
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    _general_scroll_view.alpha = 1;
    _station_contact_bg_view.alpha = 0;
    [UIView commitAnimations];
}

-(IBAction)clickStationContactButton:(UIButton*)button{
    _general_button.selected = NO;
    _station_contact_button.selected = YES;
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    _general_scroll_view.alpha = 0;
    _station_contact_bg_view.alpha = 1;
    [UIView commitAnimations];
}

-(IBAction)clickToCall:(UIButton*)button{
    NSString *tel = [button titleForState:UIControlStateNormal];
    if(tel != nil && [tel length] > 0){
        tel = [tel stringByReplacingOccurrencesOfString:@" " withString:@""];
        tel = [tel stringByReplacingOccurrencesOfString:@"-" withString:@""];
        tel = [tel stringByReplacingOccurrencesOfString:@"(852)" withString:@""];
//        NSURL *url = [[NSURL alloc] initWithString:[NSString stringWithFormat:@"tel://%@", tel]];
//        [[UIApplication sharedApplication] openURL:url];
//        [url release];
        
        UIAlertView *telAlert = [[UIAlertView alloc] initWithTitle:tel message:nil delegate:self cancelButtonTitle:NSLocalizedString(([NSString stringWithFormat:@"cancel_%@", [CoreData sharedCoreData].lang]), nil) otherButtonTitles:NSLocalizedString(([NSString stringWithFormat:@"ok_%@", [CoreData sharedCoreData].lang]), nil), nil];
        telAlert.tag = TAG_TELEPHONE;
        [telAlert show];
        [telAlert release];
    }
}

-(void)clickToLink:(UIButton*)button{
    //NSLog(@"clickToLink");
    NSString *url = [[[button titleForState:UIControlStateNormal] retain] autorelease];
    NSRange range = [url rangeOfString:@"http://"];
    if(range.location == NSNotFound){
        NSString *temp = [url copy];
        url = @"http://";
        url = [url stringByAppendingString:temp];
        [temp release];
    }
    //NSLog(@"%@", url);
    if(url != nil && [url length] > 0){
//      [[UIApplication sharedApplication] openURL:[NSURL URLWithString:url]];
        InAppBrowserViewController *temp = [[InAppBrowserViewController alloc] initWithNibName:@"InAppBrowserViewController" bundle:nil];
        temp.url_path = url;
        [self.navigationController pushViewController:temp animated:YES];
        [temp release];
    }
}

-(IBAction)clickStationContactLineButton:(UIButton*)button{
    _station_contact_line_picker_view.hidden = NO;
    _station_contact_station_picker_view.hidden = YES;
    
     [_station_contact_line_picker_view selectRow:_station_contact_line_picker_selected_index inComponent:0 animated:NO];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    if(isFive ==NO)
        _station_contact_picker_bg_view.frame = CGRectMake(0, 0, 320, 460);
    else
        _station_contact_picker_bg_view.frame = CGRectMake(0, 0, 320, 548);

    [UIView commitAnimations];
}

-(IBAction)clickStationContactStationButton:(UIButton*)button{
    _station_contact_line_picker_view.hidden = YES;
    _station_contact_station_picker_view.hidden = NO;
    
     [_station_contact_station_picker_view selectRow:_station_contact_station_picker_selected_index inComponent:0 animated:NO];
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    if(isFive ==NO)
        _station_contact_picker_bg_view.frame = CGRectMake(0, 0, 320, 460);
    else
        _station_contact_picker_bg_view.frame = CGRectMake(0, 0, 320, 548);

    [UIView commitAnimations];
}

-(IBAction)clickSelectButton:(UIButton*)button{  
    if(!_station_contact_line_picker_view.hidden){
        _station_contact_line_picker_selected_index = [_station_contact_line_picker_view selectedRowInComponent:0];
        _station_contact_line_value_label.text = [[_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index] objectForKey:[NSString stringWithFormat:@"line_%@", _lang]];
        NSString *line = [[_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index] objectForKey:@"line"];
        if([_station_contact_record objectForKey:line] != nil && [[_station_contact_record objectForKey:line] count] > 0){
            _station_contact_station_value_label.text = [[[_station_contact_record objectForKey:line] objectAtIndex:0] objectForKey:[NSString stringWithFormat:@"station_%@", _lang]];
            [_station_contact_tel_button setTitle:[[[_station_contact_record objectForKey:line] objectAtIndex:0] objectForKey:@"tel"] forState:UIControlStateNormal];
        }
        else{
            _station_contact_station_value_label.text = @"";
            [_station_contact_tel_button setTitle:@"" forState:UIControlStateNormal];
        }
        
        
        _station_contact_station_picker_selected_index = 0;
        [_station_contact_station_picker_view reloadAllComponents];
    }
    else{
        NSString *line = [[_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index] objectForKey:@"line"];
        if([_station_contact_record objectForKey:line] != nil && [[_station_contact_record objectForKey:line] count] > 0){
            
            _station_contact_station_picker_selected_index = [_station_contact_station_picker_view selectedRowInComponent:0];
            _station_contact_station_value_label.text = [[[_station_contact_record objectForKey:line] objectAtIndex:_station_contact_station_picker_selected_index] objectForKey:[NSString stringWithFormat:@"station_%@", _lang]];
            [_station_contact_tel_button setTitle:[[[_station_contact_record objectForKey:line] objectAtIndex:_station_contact_station_picker_selected_index] objectForKey:@"tel"] forState:UIControlStateNormal];
        }
        else{
            _station_contact_station_value_label.text = @"";
            [_station_contact_tel_button setTitle:@"" forState:UIControlStateNormal];
        }
    }
    
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.3];
    if(isFive ==NO)
        _station_contact_picker_bg_view.frame = CGRectMake(0, 460, 320, 460);
    else
        _station_contact_picker_bg_view.frame = CGRectMake(0, 548, 320, 548);

    [UIView commitAnimations];
}


#pragma mark - x-callback functions
-(void)handleCallbackMotherButton
{
    if ([CoreData shouldShowCallBackMotherButton])
    {
        _btn_callbackMother.hidden = NO;
    }
    else {
        _btn_callbackMother.hidden = YES;
    }
}

-(IBAction)clickCallbackMotherButton:(UIButton*)button
{
    DEBUGLog
    [CoreData callbackMother];
}

#pragma mark -
#pragma mark UIPickerViewDataSource

-(NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView {
	return 1;
}

-(NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component {
    if(pickerView == _station_contact_line_picker_view)
        return [_line_contact_array count];
    
    //if [_station_contact_record objectForKey:line] is nil, then return zero.
    if ([_line_contact_array count])
    {
        if ([_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index])
        {
            NSString *line = [[_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index] objectForKey:@"line"];
            return [[_station_contact_record objectForKey:line] count];        
        }
    }
    
    return 0;
}

-(NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component {
    if(pickerView == _station_contact_line_picker_view)
        return [[_line_contact_array objectAtIndex:row] objectForKey:[NSString stringWithFormat:@"line_%@", _lang]];
    NSString *line = [[_line_contact_array objectAtIndex:_station_contact_line_picker_selected_index] objectForKey:@"line"];
	return [[[_station_contact_record objectForKey:line] objectAtIndex:row] objectForKey:[NSString stringWithFormat:@"station_%@", _lang]];
}

#pragma mark -
#pragma mark UIPickerViewDelegate

-(void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component {

}

#pragma mark - UIAlertViewDelegate

-(void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex
{
    if (alertView.tag == TAG_TELEPHONE)
    {
        if (buttonIndex == 1 && alertView.title != nil)
        {
            NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"tel://%@", alertView.title]];
            [[UIApplication sharedApplication] openURL:url];
        }
    }
}

@end
